Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> funcDefinition
Rule 1     funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER
Rule 2     funcDefinition -> accessModifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER
Rule 3     accessModifier -> PUBLIC
Rule 4     accessModifier -> PROTECTED
Rule 5     accessModifier -> PRIVATE
Rule 6     accessModifier -> <empty>
Rule 7     methodSpecifier -> STATIC
Rule 8     methodSpecifier -> OVERRIDE
Rule 9     methodSpecifier -> SEALED
Rule 10    methodSpecifier -> PARTIAL
Rule 11    methodSpecifier -> ABSTRACT
Rule 12    methodSpecifier -> VIRTUAL
Rule 13    methodSpecifier -> <empty>
Rule 14    funcname -> ID
Rule 15    params -> DTYPE ID COMMA params
Rule 16    params -> DTYPE ID
Rule 17    params -> <empty>
Rule 18    statements -> statements statement
Rule 19    statements -> statement
Rule 20    statements -> <empty>
Rule 21    statement -> list SEMICOLON
Rule 22    list -> ID list
Rule 23    list -> ID

Terminals, with rules where they appear

ABSTRACT             : 11
COMMA                : 15
DTYPE                : 1 2 15 16
ID                   : 14 15 16 22 23
LBRACE               : 1 2
LFLOWER              : 1 2
OVERRIDE             : 8
PARTIAL              : 10
PRIVATE              : 5
PROTECTED            : 4
PUBLIC               : 3
RBRACE               : 1 2
RFLOWER              : 1 2
SEALED               : 9
SEMICOLON            : 21
STATIC               : 7
VIRTUAL              : 12
error                : 

Nonterminals, with rules where they appear

accessModifier       : 1 2
funcDefinition       : 0
funcname             : 1 2
list                 : 21 22
methodSpecifier      : 1
params               : 1 2 15
statement            : 18 19
statements           : 1 2 18

Parsing method: LALR

state 0

    (0) S' -> . funcDefinition
    (1) funcDefinition -> . accessModifier methodSpecifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER
    (2) funcDefinition -> . accessModifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER
    (3) accessModifier -> . PUBLIC
    (4) accessModifier -> . PROTECTED
    (5) accessModifier -> . PRIVATE
    (6) accessModifier -> .

    PUBLIC          shift and go to state 3
    PROTECTED       shift and go to state 4
    PRIVATE         shift and go to state 5
    DTYPE           reduce using rule 6 (accessModifier -> .)
    STATIC          reduce using rule 6 (accessModifier -> .)
    OVERRIDE        reduce using rule 6 (accessModifier -> .)
    SEALED          reduce using rule 6 (accessModifier -> .)
    PARTIAL         reduce using rule 6 (accessModifier -> .)
    ABSTRACT        reduce using rule 6 (accessModifier -> .)
    VIRTUAL         reduce using rule 6 (accessModifier -> .)

    funcDefinition                 shift and go to state 1
    accessModifier                 shift and go to state 2

state 1

    (0) S' -> funcDefinition .



state 2

    (1) funcDefinition -> accessModifier . methodSpecifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER
    (2) funcDefinition -> accessModifier . DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER
    (7) methodSpecifier -> . STATIC
    (8) methodSpecifier -> . OVERRIDE
    (9) methodSpecifier -> . SEALED
    (10) methodSpecifier -> . PARTIAL
    (11) methodSpecifier -> . ABSTRACT
    (12) methodSpecifier -> . VIRTUAL
    (13) methodSpecifier -> .

  ! shift/reduce conflict for DTYPE resolved as shift
    DTYPE           shift and go to state 7
    STATIC          shift and go to state 8
    OVERRIDE        shift and go to state 9
    SEALED          shift and go to state 10
    PARTIAL         shift and go to state 11
    ABSTRACT        shift and go to state 12
    VIRTUAL         shift and go to state 13

  ! DTYPE           [ reduce using rule 13 (methodSpecifier -> .) ]

    methodSpecifier                shift and go to state 6

state 3

    (3) accessModifier -> PUBLIC .

    DTYPE           reduce using rule 3 (accessModifier -> PUBLIC .)
    STATIC          reduce using rule 3 (accessModifier -> PUBLIC .)
    OVERRIDE        reduce using rule 3 (accessModifier -> PUBLIC .)
    SEALED          reduce using rule 3 (accessModifier -> PUBLIC .)
    PARTIAL         reduce using rule 3 (accessModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 3 (accessModifier -> PUBLIC .)
    VIRTUAL         reduce using rule 3 (accessModifier -> PUBLIC .)


state 4

    (4) accessModifier -> PROTECTED .

    DTYPE           reduce using rule 4 (accessModifier -> PROTECTED .)
    STATIC          reduce using rule 4 (accessModifier -> PROTECTED .)
    OVERRIDE        reduce using rule 4 (accessModifier -> PROTECTED .)
    SEALED          reduce using rule 4 (accessModifier -> PROTECTED .)
    PARTIAL         reduce using rule 4 (accessModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 4 (accessModifier -> PROTECTED .)
    VIRTUAL         reduce using rule 4 (accessModifier -> PROTECTED .)


state 5

    (5) accessModifier -> PRIVATE .

    DTYPE           reduce using rule 5 (accessModifier -> PRIVATE .)
    STATIC          reduce using rule 5 (accessModifier -> PRIVATE .)
    OVERRIDE        reduce using rule 5 (accessModifier -> PRIVATE .)
    SEALED          reduce using rule 5 (accessModifier -> PRIVATE .)
    PARTIAL         reduce using rule 5 (accessModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 5 (accessModifier -> PRIVATE .)
    VIRTUAL         reduce using rule 5 (accessModifier -> PRIVATE .)


state 6

    (1) funcDefinition -> accessModifier methodSpecifier . DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER

    DTYPE           shift and go to state 14


state 7

    (2) funcDefinition -> accessModifier DTYPE . funcname LBRACE params RBRACE LFLOWER statements RFLOWER
    (14) funcname -> . ID

    ID              shift and go to state 16

    funcname                       shift and go to state 15

state 8

    (7) methodSpecifier -> STATIC .

    DTYPE           reduce using rule 7 (methodSpecifier -> STATIC .)


state 9

    (8) methodSpecifier -> OVERRIDE .

    DTYPE           reduce using rule 8 (methodSpecifier -> OVERRIDE .)


state 10

    (9) methodSpecifier -> SEALED .

    DTYPE           reduce using rule 9 (methodSpecifier -> SEALED .)


state 11

    (10) methodSpecifier -> PARTIAL .

    DTYPE           reduce using rule 10 (methodSpecifier -> PARTIAL .)


state 12

    (11) methodSpecifier -> ABSTRACT .

    DTYPE           reduce using rule 11 (methodSpecifier -> ABSTRACT .)


state 13

    (12) methodSpecifier -> VIRTUAL .

    DTYPE           reduce using rule 12 (methodSpecifier -> VIRTUAL .)


state 14

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE . funcname LBRACE params RBRACE LFLOWER statements RFLOWER
    (14) funcname -> . ID

    ID              shift and go to state 16

    funcname                       shift and go to state 17

state 15

    (2) funcDefinition -> accessModifier DTYPE funcname . LBRACE params RBRACE LFLOWER statements RFLOWER

    LBRACE          shift and go to state 18


state 16

    (14) funcname -> ID .

    LBRACE          reduce using rule 14 (funcname -> ID .)


state 17

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE funcname . LBRACE params RBRACE LFLOWER statements RFLOWER

    LBRACE          shift and go to state 19


state 18

    (2) funcDefinition -> accessModifier DTYPE funcname LBRACE . params RBRACE LFLOWER statements RFLOWER
    (15) params -> . DTYPE ID COMMA params
    (16) params -> . DTYPE ID
    (17) params -> .

    DTYPE           shift and go to state 20
    RBRACE          reduce using rule 17 (params -> .)

    params                         shift and go to state 21

state 19

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE . params RBRACE LFLOWER statements RFLOWER
    (15) params -> . DTYPE ID COMMA params
    (16) params -> . DTYPE ID
    (17) params -> .

    DTYPE           shift and go to state 20
    RBRACE          reduce using rule 17 (params -> .)

    params                         shift and go to state 22

state 20

    (15) params -> DTYPE . ID COMMA params
    (16) params -> DTYPE . ID

    ID              shift and go to state 23


state 21

    (2) funcDefinition -> accessModifier DTYPE funcname LBRACE params . RBRACE LFLOWER statements RFLOWER

    RBRACE          shift and go to state 24


state 22

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE params . RBRACE LFLOWER statements RFLOWER

    RBRACE          shift and go to state 25


state 23

    (15) params -> DTYPE ID . COMMA params
    (16) params -> DTYPE ID .

    COMMA           shift and go to state 26
    RBRACE          reduce using rule 16 (params -> DTYPE ID .)


state 24

    (2) funcDefinition -> accessModifier DTYPE funcname LBRACE params RBRACE . LFLOWER statements RFLOWER

    LFLOWER         shift and go to state 27


state 25

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE params RBRACE . LFLOWER statements RFLOWER

    LFLOWER         shift and go to state 28


state 26

    (15) params -> DTYPE ID COMMA . params
    (15) params -> . DTYPE ID COMMA params
    (16) params -> . DTYPE ID
    (17) params -> .

    DTYPE           shift and go to state 20
    RBRACE          reduce using rule 17 (params -> .)

    params                         shift and go to state 29

state 27

    (2) funcDefinition -> accessModifier DTYPE funcname LBRACE params RBRACE LFLOWER . statements RFLOWER
    (18) statements -> . statements statement
    (19) statements -> . statement
    (20) statements -> .
    (21) statement -> . list SEMICOLON
    (22) list -> . ID list
    (23) list -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RFLOWER         reduce using rule 20 (statements -> .)
    ID              shift and go to state 33

  ! ID              [ reduce using rule 20 (statements -> .) ]

    statements                     shift and go to state 30
    statement                      shift and go to state 31
    list                           shift and go to state 32

state 28

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE params RBRACE LFLOWER . statements RFLOWER
    (18) statements -> . statements statement
    (19) statements -> . statement
    (20) statements -> .
    (21) statement -> . list SEMICOLON
    (22) list -> . ID list
    (23) list -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RFLOWER         reduce using rule 20 (statements -> .)
    ID              shift and go to state 33

  ! ID              [ reduce using rule 20 (statements -> .) ]

    statements                     shift and go to state 34
    statement                      shift and go to state 31
    list                           shift and go to state 32

state 29

    (15) params -> DTYPE ID COMMA params .

    RBRACE          reduce using rule 15 (params -> DTYPE ID COMMA params .)


state 30

    (2) funcDefinition -> accessModifier DTYPE funcname LBRACE params RBRACE LFLOWER statements . RFLOWER
    (18) statements -> statements . statement
    (21) statement -> . list SEMICOLON
    (22) list -> . ID list
    (23) list -> . ID

    RFLOWER         shift and go to state 35
    ID              shift and go to state 33

    statement                      shift and go to state 36
    list                           shift and go to state 32

state 31

    (19) statements -> statement .

    RFLOWER         reduce using rule 19 (statements -> statement .)
    ID              reduce using rule 19 (statements -> statement .)


state 32

    (21) statement -> list . SEMICOLON

    SEMICOLON       shift and go to state 37


state 33

    (22) list -> ID . list
    (23) list -> ID .
    (22) list -> . ID list
    (23) list -> . ID

    SEMICOLON       reduce using rule 23 (list -> ID .)
    ID              shift and go to state 33

    list                           shift and go to state 38

state 34

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE params RBRACE LFLOWER statements . RFLOWER
    (18) statements -> statements . statement
    (21) statement -> . list SEMICOLON
    (22) list -> . ID list
    (23) list -> . ID

    RFLOWER         shift and go to state 39
    ID              shift and go to state 33

    statement                      shift and go to state 36
    list                           shift and go to state 32

state 35

    (2) funcDefinition -> accessModifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER .

    $end            reduce using rule 2 (funcDefinition -> accessModifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER .)


state 36

    (18) statements -> statements statement .

    RFLOWER         reduce using rule 18 (statements -> statements statement .)
    ID              reduce using rule 18 (statements -> statements statement .)


state 37

    (21) statement -> list SEMICOLON .

    RFLOWER         reduce using rule 21 (statement -> list SEMICOLON .)
    ID              reduce using rule 21 (statement -> list SEMICOLON .)


state 38

    (22) list -> ID list .

    SEMICOLON       reduce using rule 22 (list -> ID list .)


state 39

    (1) funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER .

    $end            reduce using rule 1 (funcDefinition -> accessModifier methodSpecifier DTYPE funcname LBRACE params RBRACE LFLOWER statements RFLOWER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DTYPE in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 28 resolved as shift
